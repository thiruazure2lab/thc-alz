# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- bash: |
    az login --service-principal -u "56b86720-69d2-4d4e-910b-66d9fbfe9171" -p "6Sw8Q~5H1juJQaJod1cYSQQW7VJ-lV0Saup3Jdyt" --tenant "89f0b56e-6d16-4fe8-9dba-176fa940f7c9"
    az account set --subscription 6b604172-d40d-4fb7-a40c-046aed5f5e7e
    
- task: TerraformInstaller@1
  inputs:
    terraformVersion: 'latest'
- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: 'Wipro-thc-spn'
    backendAzureRmResourceGroupName: 'thc-uks-sentinel-rg01'
    backendAzureRmStorageAccountName: 'saukstflevel2sentinel'
    backendAzureRmContainerName: 'tfstate'
    backendAzureRmKey: 'terraform.sentinel.tfstate'



- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'plan'
    environmentServiceNameAzureRM: 'sp-alz-bootstrap'

