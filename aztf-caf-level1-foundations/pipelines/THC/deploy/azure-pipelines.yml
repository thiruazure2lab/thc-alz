# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: Azure CAF Foundations Deploy $(Major).$(Minor).$(Patch)

variables:
- name: Major
  value: 1
- name: Minor
  value: 0
- name: Patch
  value: $[counter(format('{0}.{1}', variables['Major'], variables['Minor']), 0)]
- name: ProjectName
  value: AzureLandingZone
- name: CompanyName
  value: HighlandCouncil
- name: CAF_ENV
  value: THC  
- name: Environment
  value: Prod
- group: 'CAFLandingZones'
- group: 'AzureBuildPipeCreds'

trigger: none

resources:
  repositories:
    - repository: CAF_LandingZones
      type: git
      name: AzureLandingzone/CAF-Terraform-Landingzones
  containers:
  - container: rover
    image: $(ROVER_IMAGE)
    options: --user 0:0 -e TF_PLUGIN_CACHE_DIR="/home/$(ROVER_HOME_DIR)/plugin-cache" -e TF_DATA_DIR="/home/$(ROVER_HOME_DIR)"

stages:
- stage: 
  jobs:
  - job: FoundationsPlan
    displayName: "Plan"
    pool: 
      vmImage: 'ubuntu-latest'
    continueOnError: false
    workspace:
          clean: all
    container: rover
    timeoutInMinutes: 600
    steps:
    - checkout: self   
    - checkout: CAF_LandingZones 
    - bash: |
        ls -a
        sudo mv aztf-caf-level1-foundations /tf/caf/aztf-caf-level1-foundations -f
        sudo mv CAF-Terraform-Landingzones /tf/caf/CAF-Terraform-Landingzones -f
      failOnStderr: true
      displayName: 'Checkout'

    - bash: |
        az login --service-principal --username $(CAF_SP_CLIENTID) --password $(CAF_SP_SECRET) --tenant $(LAUNCHPAD_TENANTID)
        az account set --subscription $(LAUNCHPAD_SUBSCRIPTION_ID)
        echo $(LAUNCHPAD_SUBSCRIPTION_ID)
      failOnStderr: true
      displayName: 'Login to Azure'

    - bash: |
        echo "Git Creds Setup"
        git config --global user.name "$(CAF_Terraform_Module_User_eslz)"
        git config --global url."https://oauth2:$(CAF_Terraform_Module_Token_eslz)@dev.azure.com/HighlandCouncil/AzureLandingZone/_git/caf-enterprise-modules".insteadOf https://dev.azure.com/HighlandCouncil/AzureLandingZone/_git/caf-enterprise-modules

        /tf/rover/rover.sh -lz /tf/caf/CAF-Terraform-Landingzones/caf_solution/add-ons/caf_eslz \
        -tfstate $(FOUNDATION_TFSTATE_FILE) \
        -var-folder /tf/caf/aztf-caf-level1-foundations/configuration/$(CAF_ENV) \
        -parallelism 30 \
        -level level1 \
        -env $(CAF_ENV) \
        -a plan
      failOnStderr: true
      displayName: 'Terraform Launchpad Plan'
  
  - job: waitForValidation
    displayName: "Validate the plan"
    continueOnError: false
    dependsOn: "FoundationsPlan"
    pool: server
    timeoutInMinutes: 2880 ## 2 day
    steps:
    - task: ManualValidation@0
      timeoutInMinutes: 1440
      inputs:
        instructions: "Please review the plan"
        onTimeout: reject
        notifyUsers: $(LAUNCHPAD_PLAN_APPROVERS)
  
  - job: FoundationsApply
    displayName: "Foundations Apply"
    dependsOn: "waitForValidation"
    pool: 
      vmImage: 'ubuntu-latest'
    continueOnError: false
    workspace:
          clean: all
    container: rover
    timeoutInMinutes: 600
    steps:
    - checkout: self   
    - checkout: CAF_LandingZones 
    - bash: |
        sudo mv aztf-caf-level1-foundations /tf/caf/aztf-caf-level1-foundations -f
        sudo mv CAF-Terraform-Landingzones /tf/caf/CAF-Terraform-Landingzones -f
      failOnStderr: true
      displayName: 'Checkout'

    - bash: |
        az login --service-principal --username $(CAF_SP_CLIENTID) --password $(CAF_SP_SECRET) --tenant $(LAUNCHPAD_TENANTID)
        az account set --subscription $(LAUNCHPAD_SUBSCRIPTION_ID)
      failOnStderr: true
      displayName: 'Login to Azure'

    - bash: |
        echo "Git Creds Setup"
        git config --global user.name "$(CAF_Terraform_Module_User_eslz)"
        git config --global url."https://oauth2:$(CAF_Terraform_Module_Token_eslz)@dev.azure.com/HighlandCouncil/AzureLandingZone/_git/caf-enterprise-modules".insteadOf https://dev.azure.com/HighlandCouncil/AzureLandingZone/_git/caf-enterprise-modules

        /tf/rover/rover.sh -lz /tf/caf/CAF-Terraform-Landingzones/caf_solution/add-ons/caf_eslz \
        -tfstate $(FOUNDATION_TFSTATE_FILE) \
        -var-folder /tf/caf/aztf-caf-level1-foundations/configuration/$(CAF_ENV) \
        -parallelism 30 \
        -level level1 \
        -env $(CAF_ENV) \
        -a apply
      failOnStderr: true
      displayName: 'Terraform Foundations Deploy'
